{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"font-size\": \"40px\"\n  }\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"blink_me\"\n}, \"|\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"span\", _hoisted_2, _toDisplayString($data.output), 1\n  /* TEXT */\n  ), _hoisted_3]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;EACHC,KAAuB,EAAvB;IAAA;EAAA;;;gCACNC,oBAA+B,MAA/B,EAA+B;EAAzBF,KAAK,EAAC;AAAmB,CAA/B,EAAuB,GAAvB,EAAwB;AAAA;AAAxB;;;uBAFFG,oBAGM,KAHN,cAGM,CAFJD,oBAAqD,MAArD,cAAqDE,iBAAfC,YAAe,CAArD,EAA4C;EAAA;EAA5C,CAEI,EADJC,UACI,CAHN","names":["class","style","_createElementVNode","_createElementBlock","_toDisplayString","$data","_hoisted_3"],"sourceRoot":"","sources":["/Users/sk/Desktop/vue-project/vue-typewrite-register/src/App.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <span style=\"font-size: 40px\">      {{output}}</span>\n      <span class=\"blink_me\">|</span>\n    </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      title: \"Hello World\",\n      output: \"\",\n      speed: \"80\",\n      i:0,\n\n    }\n  },\n  mounted() {\n    this.typeWriter()\n  },\n  methods:{\n    typeWriter(){\n      if ( this.i < this.title.length) {\n         this.output += this.title.charAt(this.i);\n\n         console.log(this.title.length)\n        this.i= this.i+1;\n        setTimeout(this.typeWriter, this.speed);\n      }else{\n        setTimeout(this.writeClear,2000)\n      }\n\n\n    },\n    writeClear(){\n      this.i = 0\n      this.output = \"\"\n      this.typeWriter()\n    }\n  }\n}\n</script>\n<style>\n\n.blink_me {\n  animation: blinker 0.9s linear infinite;\n}\n@keyframes blinker {\n  50% { opacity: 0; }\n}\n</style>"]},"metadata":{},"sourceType":"module"}