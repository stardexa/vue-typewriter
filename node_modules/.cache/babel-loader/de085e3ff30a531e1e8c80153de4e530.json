{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"font-size\": \"35px\"\n  }\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"blink_me\"\n}, \"|\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString($data.realTitle) + \" \", 1\n  /* TEXT */\n  ), _hoisted_2, _hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.typeWriter && $options.typeWriter(...args))\n  }, \"Basssss\")]);\n}","map":{"version":3,"mappings":";;EACSA,KAAwB,EAAxB;IAAA;EAAA;;;gCAEHC,oBAA+B,MAA/B,EAA+B;EAAzBC,KAAK,EAAC;AAAmB,CAA/B,EAAuB,GAAvB,EAAwB;AAAA;AAAxB;;gCACAD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;uBAHFE,oBAKM,KALN,cAKM,mCAJFC,mBAAY,KACd;EAAA;GAGI,EAHJC,UAGI,EAFJC,UAEI,EADJL,oBAA4C,QAA5C,EAA4C;IAAnCM,OAAK,yCAAEC,mDAAF;EAA8B,CAA5C,EAA4B,SAA5B,CACI,CALN","names":["style","_createElementVNode","class","_createElementBlock","$data","_hoisted_2","_hoisted_3","onClick","$options"],"sourceRoot":"","sources":["/Users/sk/Desktop/vue-project/vue-typewrite-register/src/App.vue"],"sourcesContent":["<template>\n    <div style=\"font-size: 35px;\">\n      {{realTitle }}\n      <span class=\"blink_me\">|</span>\n      <br>\n      <button @click=\"typeWriter\">Basssss</button>\n    </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      title: \"selam test\",\n      realTitle: \"\",\n      speed: \"30\",\n      i:0,\n      replace: [\n        {from: \"Vue\", to: \"React?\"},\n        {from: \"Typewriter React?\", to: \"Joking, it`s Vue!\"},\n      ],\n    }\n  },\n  methods:{\n    typeWriter(){\n      if ( this.i < this.title.length) {\n         this.realTitle += this.title.charAt(this.i);\n\n         console.log(this.title.length)\n        this.i= this.i+1;\n        setTimeout(this.typeWriter, this.speed);\n      }else{\n        setTimeout(this.writeClear,2000)\n      }\n\n\n    },\n    writeClear(){\n      this.i = 0\n      this.realTitle = \"\"\n    }\n  }\n}\n</script>\n<style>\nbody{\n  background: black;\n}\n.blink_me {\n  animation: blinker 1s linear infinite;\n}\n\n@keyframes blinker {\n  50% { opacity: 0; }\n}\n</style>"]},"metadata":{},"sourceType":"module"}