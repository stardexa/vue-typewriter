{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"font-size\": \"35px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"mappings":";;EACSA,KAAwB,EAAxB;IAAA;EAAA;;;uBAALC,oBAAoC,KAApC","names":["style","_createElementBlock"],"sourceRoot":"","sources":["/Users/sk/Desktop/vue-project/vue-typewrite-register/src/App.vue"],"sourcesContent":["<template>\n    <div style=\"font-size: 35px;\"></div>\n</template>\n\n<script>\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      title: \"selam test\",\n      realTitle: \"\",\n      speed: \"30\",\n      i:0,\n      replace: [\n        {from: \"Vue\", to: \"React?\"},\n        {from: \"Typewriter React?\", to: \"Joking, it`s Vue!\"},\n      ],\n    }\n  },\n  methods:{\n    typeWriter(){\n      if ( this.i < this.title.length) {\n         this.realTitle += this.title.charAt(this.i);\n\n         console.log(this.title.length)\n        this.i= this.i+1;\n        setTimeout(this.typeWriter, this.speed);\n      }else{\n        setTimeout(this.writeClear,2000)\n      }\n\n\n    },\n    writeClear(){\n      this.i = 0\n      this.realTitle = \"\"\n    }\n  }\n}\n</script>\n<style>\n.blink_me {\n  animation: blinker 1s linear infinite;\n}\n\n@keyframes blinker {\n  50% { opacity: 0; }\n}\n</style>"]},"metadata":{},"sourceType":"module"}