{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(_toDisplayString($data.realTitle) + \" \", 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.typeWriter && $options.typeWriter(...args))\n  }, \"Basssss\")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;+FACOA,mBAAY,KACjB;EAAA;KAAAC,oBAA4C,QAA5C,EAA4C;IAAnCC,OAAK,yCAAEC,mDAAF;EAA8B,CAA5C,EAA4B,SAA5B","names":["$data","_createElementVNode","onClick","$options"],"sourceRoot":"","sources":["/Users/sk/Desktop/vue-project/vue-typewrite-register/src/App.vue"],"sourcesContent":["<template>\n     {{realTitle }}\n  <button @click=\"typeWriter\">Basssss</button>\n</template>\n\n<script>\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      title: \"selam test\",\n      realTitle: \"\",\n      speed: \"30\",\n      i:0,\n      replace: [\n        {from: \"Vue\", to: \"React?\"},\n        {from: \"Typewriter React?\", to: \"Joking, it`s Vue!\"},\n      ],\n    }\n  },\n  methods:{\n    typeWriter(){\n      if ( this.i < this.title.length) {\n         this.realTitle.charAt(i);\n         console.log(this.title.length)\n        this.i= this.i+1;\n        setTimeout(this.typeWriter, this.speed);\n      }\n    },\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}